import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import '../styles/components/header.css';
import '../styles/components/free-lesson-form.css'; // –°—Ç–∏–ª–∏ –¥–ª—è —Ñ–æ—Ä–º—ã

const Header = () => {
    const [showCallbackModal, setShowCallbackModal] = useState(false);
    const [formData, setFormData] = useState({
        name: '',
        phone: ''
    });
    const [isSubmitting, setIsSubmitting] = useState(false);

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData(prev => ({
            ...prev,
            [name]: value
        }));
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        setIsSubmitting(true);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        if (!/^[\d\+]{7,15}$/.test(formData.phone)) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
            setIsSubmitting(false);
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∞—Å—Ç—ã–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        const lastSubmission = localStorage.getItem('lastCallbackSubmit');
        if (lastSubmission && Date.now() - lastSubmission < 30000) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π');
            setIsSubmitting(false);
            return;
        }

        try {
            const botToken = '7947163456:AAF_DkDFYNSjrcHdGquyJHiYBFEr_ax-6PI';
            const chatId = '1188950273';
            const text = `üìå *–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞*\n
üë§ *–ò–º—è:* ${formData.name}\n
üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${formData.phone}\n
üïí *–í—Ä–µ–º—è:* ${new Date().toLocaleString()}`;

            const response = await fetch(
                `https://api.telegram.org/bot${botToken}/sendMessage?chat_id=${chatId}&parse_mode=Markdown&text=${encodeURIComponent(text)}`
            );

            if (response.ok) {
                alert('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
                setFormData({ name: '', phone: '' });
                setShowCallbackModal(false);
                localStorage.setItem('lastCallbackSubmit', Date.now());
            } else {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            alert('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        } finally {
            setIsSubmitting(false);
        }
    };

    const openCallbackModal = (e) => {
        e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ
        setShowCallbackModal(true);
    };

    const closeCallbackModal = () => {
        setShowCallbackModal(false);
    };

    return (
        <>
            <header className="main-header">
                <div className="logo">–ê–≤—Ç–æ—à–∫–æ–ª–∞ McQueen</div>
                <nav className="main-nav">
                    <Link to="/">–ì–ª–∞–≤–Ω–∞—è</Link>
                    <Link to="/about">–û–± –∞–≤—Ç–æ—à–∫–æ–ª–µ</Link>
                    <Link to="/team">–ö–æ–º–∞–Ω–¥–∞</Link>
                    <Link to="/reviews">–û—Ç–∑—ã–≤—ã</Link>
                    <a href="#callback" onClick={openCallbackModal}>–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ</a>
                    <button className="account-btn"><Link to="/login">–ê–∫–∫–∞—É–Ω—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞</Link></button>
                </nav>

            </header>

            {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞ */}
            {showCallbackModal && (
                <div className="modal-overlay">
                    <div className="modal-content">
                        <button className="close-modal" onClick={closeCallbackModal}>√ó</button>
                        <h3>–ú—ã –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º</h3>
                        <p>–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è</p>

                        <form onSubmit={handleSubmit}>
                            <div className="form-group">
                                <label htmlFor="callback-name">–í–∞—à–µ –∏–º—è</label>
                                <input
                                    type="text"
                                    id="callback-name"
                                    name="name"
                                    value={formData.name}
                                    onChange={handleChange}
                                    required
                                    minLength="2"
                                />
                            </div>
                            <div className="form-group">
                                <label htmlFor="callback-phone">–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω</label>
                                <input
                                    type="tel"
                                    id="callback-phone"
                                    name="phone"
                                    value={formData.phone}
                                    onChange={handleChange}
                                    required
                                    pattern="[\d\+]{7,15}"
                                    title="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 7 –¥–æ 15 —Ü–∏—Ñ—Ä"
                                />
                            </div>
                            <button
                                type="submit"
                                className="submit-btn"
                                disabled={isSubmitting}
                            >
                                {isSubmitting ? (
                                    <span>–û—Ç–ø—Ä–∞–≤–∫–∞...</span>
                                ) : (
                                    <span>–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫</span>
                                )}
                            </button>
                        </form>
                    </div>
                </div>
            )}
        </>
    );
};

export default Header;