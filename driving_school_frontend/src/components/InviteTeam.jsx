import React, { useState } from 'react';
import '../styles/components/free-lesson-form.css';

const FreeLessonForm = () => {
    const [formData, setFormData] = useState({
        name: '',
        phone: ''
    });
    const [isSubmitting, setIsSubmitting] = useState(false);

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData(prev => ({
            ...prev,
            [name]: value
        }));
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        setIsSubmitting(true);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        if (!/^[\d\+]{7,15}$/.test(formData.phone)) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
            setIsSubmitting(false);
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∞—Å—Ç—ã–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        const lastSubmission = localStorage.getItem('lastFormSubmit');
        if (lastSubmission && Date.now() - lastSubmission < 30000) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π');
            setIsSubmitting(false);
            return;
        }

        try {
            const botToken = '7947163456:AAF_DkDFYNSjrcHdGquyJHiYBFEr_ax-6PI';
            const chatId = '1188950273';
            const text = `üìå *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É –≤ –∞–≤—Ç–æ—à–∫–æ–ª—É McQueen*\n
üë§ *–ò–º—è:* ${formData.name}\n
üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${formData.phone}\n
üïí *–í—Ä–µ–º—è:* ${new Date().toLocaleString()}`;

            const response = await fetch(
                `https://api.telegram.org/bot${botToken}/sendMessage?chat_id=${chatId}&parse_mode=Markdown&text=${encodeURIComponent(text)}`
            );

            if (response.ok) {
                alert('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
                setFormData({ name: '', phone: '' });
                localStorage.setItem('lastFormSubmit', Date.now());
            } else {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            alert('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        } finally {
            setIsSubmitting(false);
        }
    };

    return (
        <section  id="free-lesson-form" className="free-lesson-form">
            <div className="container-frl">
                <h2 className="form-title">–•–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã? - –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º!</h2>
                <form onSubmit={handleSubmit}>
                    <div className="form-group">
                        <label htmlFor="name">–ò–º—è</label>
                        <input
                            type="text"
                            id="name"
                            name="name"
                            value={formData.name}
                            onChange={handleChange}
                            required
                            minLength="2"
                        />
                    </div>
                    <div className="form-group">
                        <label htmlFor="phone">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</label>
                        <input
                            type="tel"
                            id="phone"
                            name="phone"
                            value={formData.phone}
                            onChange={handleChange}
                            required
                            pattern="[\d\+]{7,15}"
                            title="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 7 –¥–æ 15 —Ü–∏—Ñ—Ä"
                        />
                    </div>
                    <button
                        type="submit"
                        className="submit-btn"
                        disabled={isSubmitting}
                    >
                        {isSubmitting ? (
                            <span>–û—Ç–ø—Ä–∞–≤–∫–∞...</span>
                        ) : (
                            <span>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</span>
                        )}
                    </button>
                </form>
            </div>
        </section>
    );
};

export default FreeLessonForm;